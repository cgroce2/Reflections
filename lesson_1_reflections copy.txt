How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Answer: Having access to older files let's you see the history of changes, and could help in debugging, or show incremental improvement steps that worked and could be followed in future dev work.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?
Pros - Allows you to control the logical time to commit.
Cons - If you donâ€™t commit then your work is lost

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Answer: Because there may be changes across files, related to one logical feature change.  Allowing changes across files per commit gives you the ability to track changes related to a logical change in each affected file, for each commit.

How can you use the commands git log and git diff to view the history of files?
Answer:git log shows the commit history of a particular repo, git diff shows the changes between two commit ids.

How might using version control make you more confident to make changes that could break something?
Answer: Using certain controls/commands in version control can give you the ability to revert to prior versions without the bug.  Giving you more freedom to try different things.

Now that you have your workspace set up, what do you want to try using Git for?
Answer: Saving different versions of code, creating pull requests, committing changes, checking out different versions.